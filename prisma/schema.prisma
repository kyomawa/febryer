generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  image     String?
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
}

model CustomerLog {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String
  phone     String
  address   String
  message   String
  createdAt DateTime @default(now())

  bookings Booking[]
}

model Booking {
  id        String        @id @default(auto()) @map("_id") @db.ObjectId
  startTime DateTime
  endTime   DateTime
  status    BookingStatus @default(PENDING)
  createdAt DateTime      @default(now())

  service    Service     @relation(fields: [serviceId], references: [id], onDelete: Cascade)
  serviceId  String      @db.ObjectId
  customer   CustomerLog  @relation(fields: [customerId], references: [id], onDelete: Cascade)
  customerId String       @db.ObjectId
}


model Service {
  id        String        @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  description   String
  price     Float
  duration  String
  createdAt DateTime      @default(now())
  image     String?
  list      ServiceItem[]

  bookings Booking[]
}

model ServiceItem {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  content String

  serviceId String  @db.ObjectId
  service   Service @relation(fields: [serviceId], references: [id], onDelete: Cascade)
}

model Theme {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  color     String?
  image     String?
  createdAt DateTime @default(now())
}

enum BookingStatus {
  PENDING
  ACCEPTED
  REFUSED
}
